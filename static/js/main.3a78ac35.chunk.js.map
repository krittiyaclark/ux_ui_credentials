{"version":3,"sources":["components/Pages/Login.js","components/Pages/Register.js","components/Pages/ForgotPassword.js","App.js","serviceWorker.js","index.js"],"names":["Login","react_default","a","createElement","Fragment","className","type","aria-describedby","required","htmlFor","id","react_router_dom","to","href","Component","Register","ForgotPassword","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a78ac35.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  render() {\n    return (\n      <>\n          <div className=\"container-fluid h-100 animated bounceInDown\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"card mt-5 col-md-8 mx-auto form-size\">\n                <header className=\"text-center\">\n                  <h1>\n                    Great to see you again!\n                  </h1>\n                </header>\n\n                <form>\n                  <div className=\"form-group\">\n                    <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" required></input>\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-control-placeholder\">Username / email</label>\n                  </div>\n                  <div className=\"form-group\">\n                    <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" required></input>\n                    <label htmlFor=\"exampleInputPassword1\" className=\"inputLabel form-control-placeholder\">Password</label>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary mt-3 mb-3 submit hover-effect\">\n                    <div className=\"insider\"></div>Submit\n                  </button>\n                </form>\n\n                  <footer className=\"section\">\n                    <div className=\"container-fluid\">\n                      <div className=\"row\">\n                          <div className=\"col-sm-4\">\n                              <span className=\"footer-font\"><Link to=\"/ForgotPassword\">Forgot Password?</Link></span>\n                          </div>\n                          <div className=\"col-sm-8 text-right\">\n                              <span className=\"footer-font\">Don't have an account? <Link to=\"/Register\">Get started</Link></span>\n                          </div>\n                          <div  className=\"col-sm-12 text-center\" id=\"downloadApp\">\n                              <span className=\"footer-font\">\n                                  Looking for the\n                                  <span className=\"mac\">Mac</span><span className=\"windows\">Windows</span> app?\n                                  <a href=\"https://app.zeplin.io/downloads\" className=\"downloadsLink\"> Download here</a>\n                              </span>\n                          </div>\n                      </div>\n                    </div>\n                  </footer>\n              </div>\n            </div>\n          </div>\n      </>\n    )\n  }\n}\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends Component {\n  render() {\n    return (\n      <>\n          <div className=\"container-fluid h-100 animated bounceInDown\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"card mt-5 col-md-8 mx-auto form-size\">\n                <header className=\"text-center\">\n                  <h1>\n                    Start using Zeplin!\n                    <small className=\"text-danger mt-3\">It’s free!.</small>\n                  </h1>\n                </header>\n\n                <form>\n                  <div className=\"form-group\">\n                    <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" required></input>\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-control-placeholder\">Email</label>\n                  </div>\n                  <div className=\"form-group\">\n                    <input type=\"username\" className=\"form-control\" aria-describedby=\"usernameHelp\" required></input>\n                    <label htmlFor=\"exampleInputUsername\" className=\"form-control-placeholder\">Username</label>\n                  </div>\n                  <div className=\"form-group\">\n                    <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" required></input>\n                    <label htmlFor=\"exampleInputPassword1\" className=\"inputLabel form-control-placeholder\">Password</label>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary mt-3 mb-3 submit hover-effect\">\n                    <div className=\"insider\"></div>Submit\n                  </button>\n                </form>\n\n                  <footer className=\"section\">\n                    <div className=\"container-fluid\">\n                      <div className=\"row\">\n                          <div className=\"col-sm-12 text-center\">\n                              <span className=\"footer-font\">Already have an account?<Link to=\"/\"> Login here</Link></span>\n                          </div>\n                          <div className=\"col-sm-12 text-center\">\n                              <span className=\"footer-font\">By clicking ‘Sign up FREE’, I agree to Zeplin’s <a href=\"https://zeplin.io/terms\"> Terms of Service</a></span>\n                          </div>\n                      </div>\n                    </div>\n                  </footer>\n              </div>\n            </div>\n          </div>\n    </>\n    )\n  }\n}\nexport default Register;\n","import React, { Component } from \"react\";\n\nclass ForgotPassword extends Component {\n  render() {\n    return (\n      <>\n          <div className=\"container-fluid h-100 animated bounceInDown\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"card mt-5 col-md-8 mx-auto form-size\">\n                <header className=\"text-center\">\n                  <h1>\n                    Forgot your password?\n                    <small className=\"text-danger mt-3\">We\"ll send you an email with a reset link.</small>\n                  </h1>\n                </header>\n\n                <form>\n                  <div className=\"form-group\">\n                    <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" required></input>\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-control-placeholder\">Username / email</label>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary mt-3 mb-3 submit hover-effect\">\n                    <div className=\"insider\"></div>\n                      Reset password\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n      </>\n    )\n  }\n}\nexport default ForgotPassword;\n","import React, { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Route\n} from \"react-router-dom\";\n// includes (css)\nimport \"./Assets/css/default.min.css\";\n// components\nimport Login from \"./components/Pages/Login\";\nimport Register from \"./components/Pages/Register\";\nimport ForgotPassword from \"./components/Pages/ForgotPassword\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n      <Router>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/Register\" component={Register} />\n            <Route exact path=\"/ForgotPassword\" component={ForgotPassword} />\n      </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}